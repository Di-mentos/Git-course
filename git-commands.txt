Репозиторий – папка проекта, отслеживаемого Git, содержащая дерево изменений проекта в 
хронологическом порядке. Все файлы истории хранятся в специальной папке .git/ внутри папки 
проекта.
user.name - имя, которое будет использоваться при создании коммита
user.email - почта, которая будет использоваться при создании коммита
clear - очистить консоль
dir - список текущих папок в директории
cd - перейти в директорию выше
cd .. - перейти на директорию ниже
cd d: - перейти в диск D
init - создание пустoго репозитория .git; в такой папке будет храниться техническая информация
git status - статус проекта, информация обо всех изменениях в дереве проекта, выводятся
внесенные в индекс и неиндексированные файлы
git add <file> - добавить, отслеживать(индексировать) файлы, изменения в них; 
или обновить файл
git restore <file> - отменить изменения в файле
git add . - добавить в индекс(проиндексировать) все файлы и изменения в них

индекс - файл, в котором содержатся изменения для добавления в коммит
Перед выполнением команды commit необходимо проиндексировать файлы и изменения в них
git commit - фиксирует добавленные в индекс изменения. Коммит хранит все измененные файлы, 
имя автора коммита и время, в которое был сделан коммит.
у каждого коммита есть свой специальный код, который позволяет откатиться к нему в любое время

.gitignore - файл(имя пустое) с данным расширением содержит в себе файлы или папки, 
которые разработчик не хочет видеть в Git; происходит игнорирование Gito'м этих файлов
git branch - получение списка веток; Важно понимать, что ветки — это просто указатели 
на коммиты.
git branch <name> - создать ветку с именем name
git branch -d <name> - удаление ветки, если она была слита с основной; если нет, выведется 
сообщение об ошибке
git branch -D <name> - принудительное удаление ветки
git checkout <name> - переключение на другую ветку
git checkout -b <name> - создание новой ветки и сразу переключение на нее